# `cd -- ${GIT_PREFIX:-.}` executes aliases in the current directory (https://stackoverflow.com/q/26243145)
[alias]
  amend = commit --amend --no-edit
  authors = shortlog --summary --email --numbered
  b = branch -v -v
  co = checkout
  ctags = !.git/hooks/ctags
  deleted-files = !cd -- ${GIT_PREFIX:-.} && git log --name-only --pretty=format: --diff-filter=D ${1:-.} | awk NF | sort -u && :
  dif = diff # common typo
  git = !exec git
  l = log --graph --pretty=format:'%Cred%h%Creset -%C(green)%d%Creset %s %C(yellow)(%cr) %C(blue)<%an>%Creset'
  ll = !git l | fzf-tmux --ansi --multi --preview 'git show --color=always {+2}'
  s = status --short --branch
  start = !git init && git commit -n --allow-empty -m \"initial empty commit\"
  who = log --graph --pretty=format:'%Cred%h%Creset - %C(blue)a: %an <%ae>%Creset %C(green)c: %cn <%ce>%Creset - %s'

  # GitHub pull request aliases (https://gist.github.com/gnarf/5406589)
  pr = !git fetch -fu ${2:-origin} refs/pull/$1/head:pr/$1 && :
  pr-clean = "!git for-each-ref refs/heads/pr/* --format='%(refname)' | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"

  # git-codereview aliases (https://golang.org/x/review/git-codereview)
  change = codereview change
  gofmt = codereview gofmt
  mail = codereview mail
  pending = codereview pending
  rebase-work = codereview rebase-work
  submit = codereview submit
  sync = codereview sync

[blame]
  date = relative
  coloring = repeatedLines

[credential]
  helper = cache --timeout=3600

[credential "https://source.developers.google.com"]
  helper = gcloud.sh

[color]
  ui = auto

[color "diff"]
  meta = normal

[commit]
  verbose = true

[core]
  excludesfile = ~/.config/git/ignore
  quotepath = false

[diff "vim"]
  command = vimdiff

[filter "lfs"]
  required = true
  clean = git-lfs clean -- %f
  process = git-lfs filter-process
  smudge = git-lfs smudge -- %f

# set "gpg.format = ssh" in ~/.config/git/local on appropriate hosts

[gpg "ssh"]
  defaultKeyCommand = ssh-add -L
  allowedSignersFile = ~/.config/git/allowed_signers

[http]
  cookiefile = ~/.config/git/cookies

[init]
  templatedir = ~/.config/git/template
  defaultBranch = main

[log]
  decorate = short
  follow = true

[pull]
  rebase = true

[push]
  default = simple

[rerere]
  enabled = 1

# Allow pushing changes when working with a "read-only" remote from GitHub.
[url "git@github.com:"]
  pushInsteadOf = https://github.com/
  pushInsteadOf = git://github.com/

[user]
  name = Will Norris
  email = will@willnorris.com
  # signingKey should be set in ~/.config/git/local if needed

# keep at end to let local and work configuration options override
[include]
  path = ~/.config/git/local
  path = ~/.config/git/work

# vim: ft=gitconfig
